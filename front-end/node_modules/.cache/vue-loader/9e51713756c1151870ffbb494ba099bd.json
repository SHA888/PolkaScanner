{"remainingRequest":"/home/rahul/PolkaScanner/front-end/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/rahul/PolkaScanner/front-end/src/pages/Layout/DashboardLayout.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/rahul/PolkaScanner/front-end/src/pages/Layout/DashboardLayout.vue","mtime":1622194468605},{"path":"/home/rahul/PolkaScanner/front-end/node_modules/cache-loader/dist/cjs.js","mtime":1622194467134},{"path":"/home/rahul/PolkaScanner/front-end/node_modules/babel-loader/lib/index.js","mtime":1622194467098},{"path":"/home/rahul/PolkaScanner/front-end/node_modules/cache-loader/dist/cjs.js","mtime":1622194467134},{"path":"/home/rahul/PolkaScanner/front-end/node_modules/vue-loader/lib/index.js","mtime":1622194468497}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport TopNavbar from \"./TopNavbar.vue\";\nimport ContentFooter from \"./ContentFooter.vue\";\nimport DashboardContent from \"./DashboardContent.vue\";\nimport SideBar from \"@/components/SidebarPlugin/SideBar.vue\";\nimport SidebarLink from \"@/components/SidebarPlugin/SidebarLink.vue\";\n\nimport api from \"@/connection.js\";\n\nexport default {\n  components: {\n    TopNavbar,\n    DashboardContent,\n    ContentFooter,\n    SideBar,\n    SidebarLink,\n  },\n  data() {\n    return {\n      colors: {\n        kusama: \"primary\",\n        polkadot: \"blue\",\n      },\n      backgroundColor: \"green\",\n    };\n  },\n  methods: {\n    toggleSidebar() {\n      if (this.$sidebar.showSidebar) {\n        this.$sidebar.displaySidebar(false);\n      }\n    },\n  },\n  beforeCreate() {\n    this.backgroundColor = localStorage.getItem(\"backgroundColor\") || \"green\";\n    // Check the metadata for chain name, modify color\n    api.then(\n      async function(api) {\n        const rtv = await api.rpc.state.getRuntimeVersion();\n        const specName = rtv.specName.toHuman();\n        if (Object.keys(this.colors).includes(specName)) {\n          this.backgroundColor = this.colors[specName];\n          localStorage.setItem(\"backgroundColor\", this.colors[specName]);\n        }\n      }.bind(this)\n    );\n  },\n  mounted: function() {\n    this.backgroundColor = localStorage.getItem(\"backgroundColor\") || \"green\";\n  },\n};\n",{"version":3,"sources":["DashboardLayout.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2CA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"DashboardLayout.vue","sourceRoot":"src/pages/Layout","sourcesContent":["<template>\n  <div class=\"wrapper\">\n    <!-- <div class=\"wrapper\" :class=\"{'nav-open': $sidebar.showSidebar}\"> -->\n\n    <side-bar :background-color=\"backgroundColor\">\n      <!-- <mobile-menu slot=\"content\"></mobile-menu> -->\n      <sidebar-link to=\"/home\">\n        <i class=\"tim-icons icon-tie-bow\"></i>\n        <p>Home</p>\n      </sidebar-link>\n      <sidebar-link to=\"/dashboard\">\n        <i class=\"tim-icons icon-chart-pie-36\"></i>\n        <p>Dashboard</p>\n      </sidebar-link>\n      <sidebar-link to=\"/upload\">\n        <i class=\"tim-icons icon-camera-18\"></i>\n        <p>Upload barcode</p>\n      </sidebar-link>\n      <sidebar-link to=\"/scan\">\n        <i class=\"tim-icons icon-badge\"></i>\n        <p>Scan barcode</p>\n      </sidebar-link>\n      <sidebar-link to=\"/blocknumber\">\n        <i class=\"tim-icons icon-atom\"></i>\n        <p>Block number</p>\n      </sidebar-link>\n      <sidebar-link to=\"/events\">\n        <i class=\"tim-icons icon-bell-55\"></i>\n        <p>Events</p>\n      </sidebar-link>\n    </side-bar>\n\n    <div class=\"main-panel\" :data=\"backgroundColor\">\n      <top-navbar></top-navbar>\n\n      <dashboard-content @click.native=\"toggleSidebar\"></dashboard-content>\n\n      <content-footer></content-footer>\n    </div>\n  </div>\n</template>\n<style lang=\"scss\"></style>\n<script>\nimport TopNavbar from \"./TopNavbar.vue\";\nimport ContentFooter from \"./ContentFooter.vue\";\nimport DashboardContent from \"./DashboardContent.vue\";\nimport SideBar from \"@/components/SidebarPlugin/SideBar.vue\";\nimport SidebarLink from \"@/components/SidebarPlugin/SidebarLink.vue\";\n\nimport api from \"@/connection.js\";\n\nexport default {\n  components: {\n    TopNavbar,\n    DashboardContent,\n    ContentFooter,\n    SideBar,\n    SidebarLink,\n  },\n  data() {\n    return {\n      colors: {\n        kusama: \"primary\",\n        polkadot: \"blue\",\n      },\n      backgroundColor: \"green\",\n    };\n  },\n  methods: {\n    toggleSidebar() {\n      if (this.$sidebar.showSidebar) {\n        this.$sidebar.displaySidebar(false);\n      }\n    },\n  },\n  beforeCreate() {\n    this.backgroundColor = localStorage.getItem(\"backgroundColor\") || \"green\";\n    // Check the metadata for chain name, modify color\n    api.then(\n      async function(api) {\n        const rtv = await api.rpc.state.getRuntimeVersion();\n        const specName = rtv.specName.toHuman();\n        if (Object.keys(this.colors).includes(specName)) {\n          this.backgroundColor = this.colors[specName];\n          localStorage.setItem(\"backgroundColor\", this.colors[specName]);\n        }\n      }.bind(this)\n    );\n  },\n  mounted: function() {\n    this.backgroundColor = localStorage.getItem(\"backgroundColor\") || \"green\";\n  },\n};\n</script>\n"]}]}