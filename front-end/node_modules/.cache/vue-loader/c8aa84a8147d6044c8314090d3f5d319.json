{"remainingRequest":"/home/kresna/code/substrate/polkadash/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/kresna/code/substrate/polkadash/src/pages/Events.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/kresna/code/substrate/polkadash/src/pages/Events.vue","mtime":1622076002806},{"path":"/home/kresna/code/substrate/polkadash/node_modules/cache-loader/dist/cjs.js","mtime":1622032979971},{"path":"/home/kresna/code/substrate/polkadash/node_modules/babel-loader/lib/index.js","mtime":1615008743548},{"path":"/home/kresna/code/substrate/polkadash/node_modules/cache-loader/dist/cjs.js","mtime":1622032979971},{"path":"/home/kresna/code/substrate/polkadash/node_modules/vue-loader/lib/index.js","mtime":1622032980720}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { Card } from \"@/components/index\";\n\nimport api from \"../connection.js\";\n\nexport default {\n  components: {\n    Card,\n  },\n  data() {\n    return {\n      events: {},\n      unsub: null\n    };\n  },\n  methods: {\n    subscribe: async function() {\n      let myapi = await api;\n      \n      myapi.query.system.events(async (events) => {\n        let header = await myapi.rpc.chain.getHeader();\n        let blockNumber = header.toJSON.number;\n\n        let eventArray = [];\n\n        console.log(`Received ${events.length} events: `);\n\n        events.forEach((record) => {\n          const {event, phase} = record;\n          eventArray.push(`${event.section}: ${event.method}:: (phase=${phase.toString()}`);\n        });\n        this.$set(this.events, blockNumber, eventArray);\n      }).then((_unsub) => (this.unsub = _unsub));\n    },\n    unsubscribe: function() {\n      if(this.unsub) {\n        this.unsub();\n        console.log(\"Unsubbed\");\n      }\n    }\n  },\n  created() {\n    this.subscribe();\n  },\n  beforeDestroy() {\n    this.unsubscribe();\n  }\n};\n",{"version":3,"sources":["Events.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAqBA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Events.vue","sourceRoot":"src/pages","sourcesContent":["<template>\n  <div class=\"content\">\n    <card>\n      <template slot=\"header\">\n        <h5 class=\"title\">Events</h5>\n        <p class=\"category\">Outputs the events as they come in</p>\n      </template>\n      <div class=\"row\">\n        <div class=\"col-lg-6 col-md-6 col-sm-6 col-xs-6 col-xs-6\">\n          <card v-for=\"(event, block) in events\">\n            {{ block }}\n            <p v-for=\"e in event\">\n              {{ e }}\n            </p>\n          </card>\n        </div>\n      </div>\n    </card>\n  </div>\n</template>\n<script>\nimport { Card } from \"@/components/index\";\n\nimport api from \"../connection.js\";\n\nexport default {\n  components: {\n    Card,\n  },\n  data() {\n    return {\n      events: {},\n      unsub: null\n    };\n  },\n  methods: {\n    subscribe: async function() {\n      let myapi = await api;\n      \n      myapi.query.system.events(async (events) => {\n        let header = await myapi.rpc.chain.getHeader();\n        let blockNumber = header.toJSON.number;\n\n        let eventArray = [];\n\n        console.log(`Received ${events.length} events: `);\n\n        events.forEach((record) => {\n          const {event, phase} = record;\n          eventArray.push(`${event.section}: ${event.method}:: (phase=${phase.toString()}`);\n        });\n        this.$set(this.events, blockNumber, eventArray);\n      }).then((_unsub) => (this.unsub = _unsub));\n    },\n    unsubscribe: function() {\n      if(this.unsub) {\n        this.unsub();\n        console.log(\"Unsubbed\");\n      }\n    }\n  },\n  created() {\n    this.subscribe();\n  },\n  beforeDestroy() {\n    this.unsubscribe();\n  }\n};\n</script>\n<style></style>\n"]}]}