{"remainingRequest":"/home/kresna/code/substrate/polkadash/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/kresna/code/substrate/polkadash/src/components/BaseCheckbox.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/kresna/code/substrate/polkadash/src/components/BaseCheckbox.vue","mtime":1622032947113},{"path":"/home/kresna/code/substrate/polkadash/node_modules/cache-loader/dist/cjs.js","mtime":1622032979971},{"path":"/home/kresna/code/substrate/polkadash/node_modules/thread-loader/dist/cjs.js","mtime":1621948210122},{"path":"/home/kresna/code/substrate/polkadash/node_modules/babel-loader/lib/index.js","mtime":1615008743548},{"path":"/home/kresna/code/substrate/polkadash/node_modules/cache-loader/dist/cjs.js","mtime":1622032979971},{"path":"/home/kresna/code/substrate/polkadash/node_modules/vue-loader/lib/index.js","mtime":1622032980720}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  name: \"base-checkbox\",\n  model: {\n    prop: \"checked\",\n  },\n  props: {\n    disabled: Boolean,\n    inline: Boolean,\n    checked: [Array, Boolean],\n  },\n  data() {\n    return {\n      cbId: \"\",\n      touched: false,\n    };\n  },\n  computed: {\n    model: {\n      get() {\n        return this.checked;\n      },\n      set(check) {\n        if (!this.touched) {\n          this.touched = true;\n        }\n        this.$emit(\"input\", check);\n      },\n    },\n    inlineClass() {\n      if (this.inline) {\n        return `form-check-inline`;\n      }\n      return \"\";\n    },\n  },\n  created() {\n    this.cbId = Math.random()\n      .toString(16)\n      .slice(2);\n  },\n};\n",{"version":3,"sources":["BaseCheckbox.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAkBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"BaseCheckbox.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"form-check\" :class=\"[{ disabled: disabled }, inlineClass]\">\n    <label :for=\"cbId\" class=\"form-check-label\">\n      <input\n        :id=\"cbId\"\n        class=\"form-check-input\"\n        type=\"checkbox\"\n        :disabled=\"disabled\"\n        v-model=\"model\"\n      />\n      <span class=\"form-check-sign\"></span>\n      <slot>\n        <span v-if=\"inline\">&nbsp;</span>\n      </slot>\n    </label>\n  </div>\n</template>\n<script>\nexport default {\n  name: \"base-checkbox\",\n  model: {\n    prop: \"checked\",\n  },\n  props: {\n    disabled: Boolean,\n    inline: Boolean,\n    checked: [Array, Boolean],\n  },\n  data() {\n    return {\n      cbId: \"\",\n      touched: false,\n    };\n  },\n  computed: {\n    model: {\n      get() {\n        return this.checked;\n      },\n      set(check) {\n        if (!this.touched) {\n          this.touched = true;\n        }\n        this.$emit(\"input\", check);\n      },\n    },\n    inlineClass() {\n      if (this.inline) {\n        return `form-check-inline`;\n      }\n      return \"\";\n    },\n  },\n  created() {\n    this.cbId = Math.random()\n      .toString(16)\n      .slice(2);\n  },\n};\n</script>\n"]}]}