{"remainingRequest":"/home/kresna/code/substrate/polkadash/node_modules/babel-loader/lib/index.js!/home/kresna/code/substrate/polkadash/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--13-0!/home/kresna/code/substrate/polkadash/src/components/Charts/LineChart.js","dependencies":[{"path":"/home/kresna/code/substrate/polkadash/src/components/Charts/LineChart.js","mtime":1622032947113},{"path":"/home/kresna/code/substrate/polkadash/node_modules/cache-loader/dist/cjs.js","mtime":1622032979971},{"path":"/home/kresna/code/substrate/polkadash/node_modules/babel-loader/lib/index.js","mtime":1615008743548},{"path":"/home/kresna/code/substrate/polkadash/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js","mtime":1622032976931}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport { Line, mixins } from \"vue-chartjs\";\nexport default {\n  name: \"line-chart\",\n  extends: Line,\n  mixins: [mixins.reactiveProp],\n  props: {\n    extraOptions: Object,\n    gradientColors: {\n      type: Array,\n      default: function _default() {\n        return [\"rgba(72,72,176,0.2)\", \"rgba(72,72,176,0.0)\", \"rgba(119,52,169,0)\"];\n      },\n      validator: function validator(val) {\n        return val.length > 2;\n      }\n    },\n    gradientStops: {\n      type: Array,\n      default: function _default() {\n        return [1, 0.4, 0];\n      },\n      validator: function validator(val) {\n        return val.length > 2;\n      }\n    }\n  },\n  data: function data() {\n    return {\n      ctx: null\n    };\n  },\n  methods: {\n    updateGradients: function updateGradients(chartData) {\n      if (!chartData) return;\n      var ctx = this.ctx || document.getElementById(this.chartId).getContext(\"2d\");\n      var gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\n      gradientStroke.addColorStop(this.gradientStops[0], this.gradientColors[0]);\n      gradientStroke.addColorStop(this.gradientStops[1], this.gradientColors[1]);\n      gradientStroke.addColorStop(this.gradientStops[2], this.gradientColors[2]);\n      chartData.datasets.forEach(function (set) {\n        set.backgroundColor = gradientStroke;\n      });\n    }\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    this.$watch(\"chartData\", function (newVal, oldVal) {\n      _this.updateGradients(_this.chartData);\n\n      if (!oldVal) {\n        _this.renderChart(_this.chartData, _this.extraOptions);\n      }\n    }, {\n      immediate: true\n    });\n  }\n};",{"version":3,"sources":["/home/kresna/code/substrate/polkadash/src/components/Charts/LineChart.js"],"names":["Line","mixins","name","extends","reactiveProp","props","extraOptions","Object","gradientColors","type","Array","default","validator","val","length","gradientStops","data","ctx","methods","updateGradients","chartData","document","getElementById","chartId","getContext","gradientStroke","createLinearGradient","addColorStop","datasets","forEach","set","backgroundColor","mounted","$watch","newVal","oldVal","renderChart","immediate"],"mappings":";AAAA,SAASA,IAAT,EAAeC,MAAf,QAA6B,aAA7B;AAEA,eAAe;AACbC,EAAAA,IAAI,EAAE,YADO;AAEbC,EAAAA,OAAO,EAAEH,IAFI;AAGbC,EAAAA,MAAM,EAAE,CAACA,MAAM,CAACG,YAAR,CAHK;AAIbC,EAAAA,KAAK,EAAE;AACLC,IAAAA,YAAY,EAAEC,MADT;AAELC,IAAAA,cAAc,EAAE;AACdC,MAAAA,IAAI,EAAEC,KADQ;AAEdC,MAAAA,OAAO,EAAE;AAAA,eAAM,CACb,qBADa,EAEb,qBAFa,EAGb,oBAHa,CAAN;AAAA,OAFK;AAOdC,MAAAA,SAAS,EAAE,mBAACC,GAAD,EAAS;AAClB,eAAOA,GAAG,CAACC,MAAJ,GAAa,CAApB;AACD;AATa,KAFX;AAaLC,IAAAA,aAAa,EAAE;AACbN,MAAAA,IAAI,EAAEC,KADO;AAEbC,MAAAA,OAAO,EAAE;AAAA,eAAM,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,CAAN;AAAA,OAFI;AAGbC,MAAAA,SAAS,EAAE,mBAACC,GAAD,EAAS;AAClB,eAAOA,GAAG,CAACC,MAAJ,GAAa,CAApB;AACD;AALY;AAbV,GAJM;AAyBbE,EAAAA,IAzBa,kBAyBN;AACL,WAAO;AACLC,MAAAA,GAAG,EAAE;AADA,KAAP;AAGD,GA7BY;AA8BbC,EAAAA,OAAO,EAAE;AACPC,IAAAA,eADO,2BACSC,SADT,EACoB;AACzB,UAAI,CAACA,SAAL,EAAgB;AAChB,UAAMH,GAAG,GACP,KAAKA,GAAL,IAAYI,QAAQ,CAACC,cAAT,CAAwB,KAAKC,OAA7B,EAAsCC,UAAtC,CAAiD,IAAjD,CADd;AAEA,UAAMC,cAAc,GAAGR,GAAG,CAACS,oBAAJ,CAAyB,CAAzB,EAA4B,GAA5B,EAAiC,CAAjC,EAAoC,EAApC,CAAvB;AAEAD,MAAAA,cAAc,CAACE,YAAf,CACE,KAAKZ,aAAL,CAAmB,CAAnB,CADF,EAEE,KAAKP,cAAL,CAAoB,CAApB,CAFF;AAIAiB,MAAAA,cAAc,CAACE,YAAf,CACE,KAAKZ,aAAL,CAAmB,CAAnB,CADF,EAEE,KAAKP,cAAL,CAAoB,CAApB,CAFF;AAIAiB,MAAAA,cAAc,CAACE,YAAf,CACE,KAAKZ,aAAL,CAAmB,CAAnB,CADF,EAEE,KAAKP,cAAL,CAAoB,CAApB,CAFF;AAIAY,MAAAA,SAAS,CAACQ,QAAV,CAAmBC,OAAnB,CAA2B,UAACC,GAAD,EAAS;AAClCA,QAAAA,GAAG,CAACC,eAAJ,GAAsBN,cAAtB;AACD,OAFD;AAGD;AAtBM,GA9BI;AAsDbO,EAAAA,OAtDa,qBAsDH;AAAA;;AACR,SAAKC,MAAL,CACE,WADF,EAEE,UAACC,MAAD,EAASC,MAAT,EAAoB;AAClB,MAAA,KAAI,CAAChB,eAAL,CAAqB,KAAI,CAACC,SAA1B;;AACA,UAAI,CAACe,MAAL,EAAa;AACX,QAAA,KAAI,CAACC,WAAL,CAAiB,KAAI,CAAChB,SAAtB,EAAiC,KAAI,CAACd,YAAtC;AACD;AACF,KAPH,EAQE;AAAE+B,MAAAA,SAAS,EAAE;AAAb,KARF;AAUD;AAjEY,CAAf","sourcesContent":["import { Line, mixins } from \"vue-chartjs\";\n\nexport default {\n  name: \"line-chart\",\n  extends: Line,\n  mixins: [mixins.reactiveProp],\n  props: {\n    extraOptions: Object,\n    gradientColors: {\n      type: Array,\n      default: () => [\n        \"rgba(72,72,176,0.2)\",\n        \"rgba(72,72,176,0.0)\",\n        \"rgba(119,52,169,0)\",\n      ],\n      validator: (val) => {\n        return val.length > 2;\n      },\n    },\n    gradientStops: {\n      type: Array,\n      default: () => [1, 0.4, 0],\n      validator: (val) => {\n        return val.length > 2;\n      },\n    },\n  },\n  data() {\n    return {\n      ctx: null,\n    };\n  },\n  methods: {\n    updateGradients(chartData) {\n      if (!chartData) return;\n      const ctx =\n        this.ctx || document.getElementById(this.chartId).getContext(\"2d\");\n      const gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\n\n      gradientStroke.addColorStop(\n        this.gradientStops[0],\n        this.gradientColors[0]\n      );\n      gradientStroke.addColorStop(\n        this.gradientStops[1],\n        this.gradientColors[1]\n      );\n      gradientStroke.addColorStop(\n        this.gradientStops[2],\n        this.gradientColors[2]\n      );\n      chartData.datasets.forEach((set) => {\n        set.backgroundColor = gradientStroke;\n      });\n    },\n  },\n  mounted() {\n    this.$watch(\n      \"chartData\",\n      (newVal, oldVal) => {\n        this.updateGradients(this.chartData);\n        if (!oldVal) {\n          this.renderChart(this.chartData, this.extraOptions);\n        }\n      },\n      { immediate: true }\n    );\n  },\n};\n"]}]}