{"remainingRequest":"/home/kresna/code/substrate/polkadash/node_modules/babel-loader/lib/index.js!/home/kresna/code/substrate/polkadash/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/kresna/code/substrate/polkadash/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/kresna/code/substrate/polkadash/src/pages/Events.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/kresna/code/substrate/polkadash/src/pages/Events.vue","mtime":1622076002806},{"path":"/home/kresna/code/substrate/polkadash/node_modules/cache-loader/dist/cjs.js","mtime":1622032979971},{"path":"/home/kresna/code/substrate/polkadash/node_modules/babel-loader/lib/index.js","mtime":1615008743548},{"path":"/home/kresna/code/substrate/polkadash/node_modules/cache-loader/dist/cjs.js","mtime":1622032979971},{"path":"/home/kresna/code/substrate/polkadash/node_modules/vue-loader/lib/index.js","mtime":1622032980720}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/kresna/code/substrate/polkadash/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { Card } from \"@/components/index\";\nimport api from \"../connection.js\";\nexport default {\n  components: {\n    Card: Card\n  },\n  data: function data() {\n    return {\n      events: {},\n      unsub: null\n    };\n  },\n  methods: {\n    subscribe: function () {\n      var _subscribe = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        var _this = this;\n\n        var myapi;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return api;\n\n              case 2:\n                myapi = _context2.sent;\n                myapi.query.system.events( /*#__PURE__*/function () {\n                  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(events) {\n                    var header, blockNumber, eventArray;\n                    return regeneratorRuntime.wrap(function _callee$(_context) {\n                      while (1) {\n                        switch (_context.prev = _context.next) {\n                          case 0:\n                            _context.next = 2;\n                            return myapi.rpc.chain.getHeader();\n\n                          case 2:\n                            header = _context.sent;\n                            blockNumber = header.toJSON.number;\n                            eventArray = [];\n                            console.log(\"Received \".concat(events.length, \" events: \"));\n                            events.forEach(function (record) {\n                              var event = record.event,\n                                  phase = record.phase;\n                              eventArray.push(\"\".concat(event.section, \": \").concat(event.method, \":: (phase=\").concat(phase.toString()));\n                            });\n\n                            _this.$set(_this.events, blockNumber, eventArray);\n\n                          case 8:\n                          case \"end\":\n                            return _context.stop();\n                        }\n                      }\n                    }, _callee);\n                  }));\n\n                  return function (_x) {\n                    return _ref.apply(this, arguments);\n                  };\n                }()).then(function (_unsub) {\n                  return _this.unsub = _unsub;\n                });\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function subscribe() {\n        return _subscribe.apply(this, arguments);\n      }\n\n      return subscribe;\n    }(),\n    unsubscribe: function unsubscribe() {\n      if (this.unsub) {\n        this.unsub();\n        console.log(\"Unsubbed\");\n      }\n    }\n  },\n  created: function created() {\n    this.subscribe();\n  },\n  beforeDestroy: function beforeDestroy() {\n    this.unsubscribe();\n  }\n};",{"version":3,"sources":["Events.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAqBA,SAAA,IAAA,QAAA,oBAAA;AAEA,OAAA,GAAA;AAEA,eAAA;AACA,EAAA,UAAA,EAAA;AACA,IAAA,IAAA,EAAA;AADA,GADA;AAIA,EAAA,IAJA,kBAIA;AACA,WAAA;AACA,MAAA,MAAA,EAAA,EADA;AAEA,MAAA,KAAA,EAAA;AAFA,KAAA;AAIA,GATA;AAUA,EAAA,OAAA,EAAA;AACA,IAAA,SAAA;AAAA,+EAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACA,GADA;;AAAA;AACA,gBAAA,KADA;AAGA,gBAAA,KAAA,CAAA,KAAA,CAAA,MAAA,CAAA,MAAA;AAAA,qFAAA,iBAAA,MAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCACA,KAAA,CAAA,GAAA,CAAA,KAAA,CAAA,SAAA,EADA;;AAAA;AACA,4BAAA,MADA;AAEA,4BAAA,WAFA,GAEA,MAAA,CAAA,MAAA,CAAA,MAFA;AAIA,4BAAA,UAJA,GAIA,EAJA;AAMA,4BAAA,OAAA,CAAA,GAAA,oBAAA,MAAA,CAAA,MAAA;AAEA,4BAAA,MAAA,CAAA,OAAA,CAAA,UAAA,MAAA,EAAA;AAAA,kCACA,KADA,GACA,MADA,CACA,KADA;AAAA,kCACA,KADA,GACA,MADA,CACA,KADA;AAEA,8BAAA,UAAA,CAAA,IAAA,WAAA,KAAA,CAAA,OAAA,eAAA,KAAA,CAAA,MAAA,uBAAA,KAAA,CAAA,QAAA,EAAA;AACA,6BAHA;;AAIA,4BAAA,KAAA,CAAA,IAAA,CAAA,KAAA,CAAA,MAAA,EAAA,WAAA,EAAA,UAAA;;AAZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAA;;AAAA;AAAA;AAAA;AAAA,qBAaA,IAbA,CAaA,UAAA,MAAA;AAAA,yBAAA,KAAA,CAAA,KAAA,GAAA,MAAA;AAAA,iBAbA;;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,OADA;AAmBA,IAAA,WAAA,EAAA,uBAAA;AACA,UAAA,KAAA,KAAA,EAAA;AACA,aAAA,KAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,UAAA;AACA;AACA;AAxBA,GAVA;AAoCA,EAAA,OApCA,qBAoCA;AACA,SAAA,SAAA;AACA,GAtCA;AAuCA,EAAA,aAvCA,2BAuCA;AACA,SAAA,WAAA;AACA;AAzCA,CAAA","sourcesContent":["<template>\n  <div class=\"content\">\n    <card>\n      <template slot=\"header\">\n        <h5 class=\"title\">Events</h5>\n        <p class=\"category\">Outputs the events as they come in</p>\n      </template>\n      <div class=\"row\">\n        <div class=\"col-lg-6 col-md-6 col-sm-6 col-xs-6 col-xs-6\">\n          <card v-for=\"(event, block) in events\">\n            {{ block }}\n            <p v-for=\"e in event\">\n              {{ e }}\n            </p>\n          </card>\n        </div>\n      </div>\n    </card>\n  </div>\n</template>\n<script>\nimport { Card } from \"@/components/index\";\n\nimport api from \"../connection.js\";\n\nexport default {\n  components: {\n    Card,\n  },\n  data() {\n    return {\n      events: {},\n      unsub: null\n    };\n  },\n  methods: {\n    subscribe: async function() {\n      let myapi = await api;\n      \n      myapi.query.system.events(async (events) => {\n        let header = await myapi.rpc.chain.getHeader();\n        let blockNumber = header.toJSON.number;\n\n        let eventArray = [];\n\n        console.log(`Received ${events.length} events: `);\n\n        events.forEach((record) => {\n          const {event, phase} = record;\n          eventArray.push(`${event.section}: ${event.method}:: (phase=${phase.toString()}`);\n        });\n        this.$set(this.events, blockNumber, eventArray);\n      }).then((_unsub) => (this.unsub = _unsub));\n    },\n    unsubscribe: function() {\n      if(this.unsub) {\n        this.unsub();\n        console.log(\"Unsubbed\");\n      }\n    }\n  },\n  created() {\n    this.subscribe();\n  },\n  beforeDestroy() {\n    this.unsubscribe();\n  }\n};\n</script>\n<style></style>\n"],"sourceRoot":"src/pages"}]}